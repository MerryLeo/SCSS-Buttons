// Provide a cool custom theme for buttons and button inputs

@use 'sass:color';
@use 'sass:math';

$text: 'Press me!' !default;
$padding: 1rem !default;
$text-color: white !default;
$outline-size: .15rem !default;
$shadow-spread: .15rem !default;
$offset: .25rem !default;
$speed: 100ms !default;

// Button Shapes
@mixin btn-theme($shape: null, $color: #4783fc) {
    // Button Variables
    $border-radius: .5rem;

    // Button Shape
    @if $shape == capsule {
        $border-radius: 500000px;
    }
    @else if $shape == circle {
        $border-radius: 100%;
    }
    @else if $shape != null {
        @error 'Button Shape Invalid: ' + $shape + ' is not a defined value';
    }
    
    // Button Default Style
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: calc($padding / 2);
    width: fit-content;
    height: fit-content;
    font-weight: bold;
    padding: $padding;
    border: none;
    background: $color;
    color: $text-color;
    transition: transform ease-in-out $speed;
    box-shadow: 0 calc($offset / 2) .2rem black;
    border-radius: $border-radius;
    
    // Button Default Behaviour
    &:enabled {
        &::before {
            content: '';
            position: absolute;
            z-index: -5;
            border-radius: $border-radius;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            box-shadow: calc($offset * 2) calc($offset * 2) calc($shadow-spread * 4) #0000007f;
            opacity: 0;
            transition: opacity ease-in-out $speed;
        }
    
        &:hover {
            background: color.adjust($color, $lightness: 10%);
            transform: translate(-$offset, -$offset);
            transition: transform ease-in-out $speed;

            &::before {
                transition: opacity ease-in-out $speed;
                opacity: .4;
            }
        }

        &:focus {
            outline: $outline-size solid color.adjust($color, $hue: -15deg, $lightness: 30%);
        }
    
        &:active {
            transform: translate($offset, $offset);
            transition: transform ease-in-out calc($speed / 2);
            &::before {
                transition: opacity ease-in-out $speed;
                opacity: 0;
            }
        }
    }
    
    &:disabled {
        cursor: default;
        background: color.adjust($color, $hue: -5deg, $blackness: 45%);
    }

    &::after {
        content: $text;
    }
}